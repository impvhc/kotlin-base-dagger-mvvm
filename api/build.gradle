apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def BASE_API_URL = "BASE_API_URL"


android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion compile_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "${BASE_API_URL}", "\"\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    implementation "com.android.support:appcompat-v7:$support_version"

    // Anko
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"

    //Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Joda
    implementation "joda-time:joda-time:$joda_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"
}
repositories {
    mavenCentral()
}
